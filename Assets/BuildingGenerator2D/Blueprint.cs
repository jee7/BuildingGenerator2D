//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;
using ST;

namespace BuildingGen2D
{
	[System.Serializable]
	public class Blueprint
	{
		private List<BlueprintObject> objects = new List<BlueprintObject>();
		private string type;
		private List<STSpriteInfo> m_sprites;
		private List<STSpriteInfo> m_sprites2;
		public static int windowCount = 0;
		public int windowProb { get; set; }

		public Blueprint (string type, List<STSpriteInfo> sprites, int probability)
		{
			this.m_sprites = sprites;
			if (type == "windows") {
				this.windowProb = probability;
				createWindowsBp();

			} 
			this.type = type;
		}

		public Blueprint (string type1, List<STSpriteInfo> sprites1, int probability, string type2, List<STSpriteInfo> sprites2 )
		{
			this.m_sprites = sprites1;
			this.m_sprites2 = sprites2;
			if (type1 == "windows" && type2 == "ladders") {
				this.windowProb = probability;
				//createLadderWindowsBp();
				
			}

		}


		public void addBlueprintOject(BlueprintObject bpo) {
			objects.Add (bpo);
		
		}

		public List<BlueprintObject> getBlueprintObjects()  {
			return objects;
		}

		public string Type {
			get {
				return type;
			}
		}

		private void createWindowsBp() {


			for (int i = 0; i < 2; i++) {
				for (int j = 0; j < 3; j++) {
					int random = UnityEngine.Random.Range(0, m_sprites.Count);
					int exists = UnityEngine.Random.Range(0, 101);
					int probability = windowProb;
					Debug.Log ("-- window prob   " + probability);
					//int probability = 60;
					if (exists <= probability && probability != 0) {
						//Debug.Log ("-- create window   ");
						BlueprintObject obj = new BlueprintObject("window_"+windowCount, m_sprites[random].target, 10 + j * 30, 10 + i*40);
						windowCount++;
						objects.Add(obj);
					}
				}
			}

		}


	}
}

